🧠 الخريطة الذهنية العامة لحل جميع المشاكل البرمجية
1️⃣ فهم المشكلة (Understand the Problem)

🔹 اقرأ المطلوب مرتين على الأقل.

🔹 حدد المدخلات والمخرجات بوضوح.

🔹 اكتشف القيود (Constraints) مثل حجم البيانات والوقت.

🔹 جرّب مثال يدوي صغير.

📌 تفرعات خاصة

مشاكل المصفوفات (Arrays): ما نوع البيانات؟ هل مرتبة؟ هل مكررة؟

مشاكل السلاسل النصية (Strings): هل الحروف حساسة لحالة الأحرف؟ هل هناك Unicode؟

مشاكل الرسوم البيانية (Graphs): هل الرسم موجه؟ هل هناك أوزان؟ هل الرسم متصل؟

مشاكل الزمن والتاريخ: ما صيغة التاريخ؟ هل تشمل مناطق زمنية؟

2️⃣ التحليل (Analysis)

🔹 صنّف المشكلة: هل هي بحث، ترتيب، تحسين، محاكاة؟

🔹 ضع تصور للتعقيد الزمني (O(n), O(n log n), …).

🔹 دوّن الحالات الطرفية (Edge Cases).

📌 تفرعات خاصة

Arrays: هل هناك إمكانية استخدام Two Pointers أو Sliding Window؟

Strings: هل تحتاج إلى HashMap للعدّ؟ Regex؟

Graphs: أي خوارزمية أنسب؟ (BFS, DFS, Dijkstra, Floyd-Warshall).

Dynamic Programming: ما الحالة (State)؟ ما الانتقال (Transition)؟

3️⃣ تصميم الحل (Solution Design)

🔹 اختر الخوارزمية المناسبة.

🔹 حدد البنى المطلوبة (Stack, Queue, Map, Set, Heap).

🔹 اكتب Pseudocode.

📌 تفرعات خاصة

Greedy: هل الحل المحلي يؤدي إلى الحل الأمثل؟

Sorting/Searching: هل تحتاج Binary Search أو QuickSort؟

DP: عرّف جدول DP: dp[i] ماذا يمثل؟

Graphs: هل الرسم يحتاج خوارزمية تدفق (Flow) أو أقصر مسار؟

4️⃣ كتابة الكود (Implementation)

🔹 ترجم الـ Pseudocode إلى JavaScript.

🔹 استخدم أسماء واضحة للمتغيرات.

🔹 أضف تعليقات صغيرة لشرح الخطوات.

📌 في JavaScript:

Arrays → map, reduce, filter.

Strings → split, substring, toLowerCase.

Graphs → استخدم Map مع Set للتمثيل.

Time → كائن Date وطرق مثل .getTime().

5️⃣ الاختبار والتحسين (Testing & Optimization)

🔹 اختبر على مدخلات صغيرة.

🔹 اختبر الحالات الطرفية (0، قيم سالبة، بيانات ضخمة).

🔹 حسّن التعقيد إذا كان بطيئًا.

📌 تفرعات خاصة

Arrays: اختبر مصفوفة فارغة، عنصر واحد، أعداد ضخمة.

Strings: نص فارغ، نص طويل، Unicode/Emojis.

Graphs: عقدة واحدة، رسم غير متصل، دورة (Cycle).

Big Numbers: هل هناك تجاوز للأعداد (Overflow)؟

6️⃣ التعلم والتكرار (Learning & Iteration)

🔹 راجع الحل بعد كتابته.

🔹 قارن بخوارزميات أخرى.

🔹 دوّن ملاحظاتك على النوع.

🔹 أعد حل نفس النمط مع مسائل جديدة.

📌 تفرعات خاصة

Arrays: تدرب على أنماط مثل Two Pointers و Prefix Sum.

Strings: تدرب على Palindrome، Substring Search.

Graphs: تدرب على BFS/DFS، Dijkstra، MST.

DP: تدرب على Knapsack، LIS، Fibonacci Variants.